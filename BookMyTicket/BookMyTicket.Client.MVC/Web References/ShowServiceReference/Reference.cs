//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace BookMyTicket.Client.MVC.ShowServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IShowService", Namespace="http://tempuri.org/")]
    public partial class ShowService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetShowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShowsByTheatreOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ShowService() {
            this.Url = global::BookMyTicket.Client.MVC.Properties.Settings.Default.BookMyTicket_Client_MVC_ShowServiceReference_ShowService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetShowsCompletedEventHandler GetShowsCompleted;
        
        /// <remarks/>
        public event GetShowsByTheatreCompletedEventHandler GetShowsByTheatreCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IShowService/GetShows", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/BookMyTicket.Services.DTO")]
        public ShowDTO[] GetShows() {
            object[] results = this.Invoke("GetShows", new object[0]);
            return ((ShowDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetShowsAsync() {
            this.GetShowsAsync(null);
        }
        
        /// <remarks/>
        public void GetShowsAsync(object userState) {
            if ((this.GetShowsOperationCompleted == null)) {
                this.GetShowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShowsOperationCompleted);
            }
            this.InvokeAsync("GetShows", new object[0], this.GetShowsOperationCompleted, userState);
        }
        
        private void OnGetShowsOperationCompleted(object arg) {
            if ((this.GetShowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShowsCompleted(this, new GetShowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IShowService/GetShowsByTheatre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/BookMyTicket.Services.DTO")]
        public ShowDTO[] GetShowsByTheatre(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetShowsByTheatre", new object[] {
                        id,
                        idSpecified});
            return ((ShowDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetShowsByTheatreAsync(int id, bool idSpecified) {
            this.GetShowsByTheatreAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetShowsByTheatreAsync(int id, bool idSpecified, object userState) {
            if ((this.GetShowsByTheatreOperationCompleted == null)) {
                this.GetShowsByTheatreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShowsByTheatreOperationCompleted);
            }
            this.InvokeAsync("GetShowsByTheatre", new object[] {
                        id,
                        idSpecified}, this.GetShowsByTheatreOperationCompleted, userState);
        }
        
        private void OnGetShowsByTheatreOperationCompleted(object arg) {
            if ((this.GetShowsByTheatreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShowsByTheatreCompleted(this, new GetShowsByTheatreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/BookMyTicket.Services.DTO")]
    public partial class ShowDTO {
        
        private int availableSeatsField;
        
        private bool availableSeatsFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string metaDataField;
        
        private string movieField;
        
        private int movieIDField;
        
        private bool movieIDFieldSpecified;
        
        private string screenDateFromField;
        
        private string screenDateToField;
        
        private string showTimeField;
        
        private string theatreField;
        
        private int theatreIDField;
        
        private bool theatreIDFieldSpecified;
        
        /// <remarks/>
        public int AvailableSeats {
            get {
                return this.availableSeatsField;
            }
            set {
                this.availableSeatsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvailableSeatsSpecified {
            get {
                return this.availableSeatsFieldSpecified;
            }
            set {
                this.availableSeatsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MetaData {
            get {
                return this.metaDataField;
            }
            set {
                this.metaDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Movie {
            get {
                return this.movieField;
            }
            set {
                this.movieField = value;
            }
        }
        
        /// <remarks/>
        public int MovieID {
            get {
                return this.movieIDField;
            }
            set {
                this.movieIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MovieIDSpecified {
            get {
                return this.movieIDFieldSpecified;
            }
            set {
                this.movieIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ScreenDateFrom {
            get {
                return this.screenDateFromField;
            }
            set {
                this.screenDateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ScreenDateTo {
            get {
                return this.screenDateToField;
            }
            set {
                this.screenDateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShowTime {
            get {
                return this.showTimeField;
            }
            set {
                this.showTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Theatre {
            get {
                return this.theatreField;
            }
            set {
                this.theatreField = value;
            }
        }
        
        /// <remarks/>
        public int TheatreID {
            get {
                return this.theatreIDField;
            }
            set {
                this.theatreIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TheatreIDSpecified {
            get {
                return this.theatreIDFieldSpecified;
            }
            set {
                this.theatreIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetShowsCompletedEventHandler(object sender, GetShowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShowDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShowDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetShowsByTheatreCompletedEventHandler(object sender, GetShowsByTheatreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShowsByTheatreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShowsByTheatreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShowDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShowDTO[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591